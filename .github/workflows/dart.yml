name: GitHubActionsFlutter
on: push
jobs: 
    run_push:
        runs-on: ubuntu-latest
        env:
          REPOSITORY_URL: https://github.com/santiagogarcia70/flutter_example
          IMAGE_NAME: ${{ github.repository }}/alerta-cli
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        steps:
            - uses: act10ns/slack@v1
              with:
                status: starting
                channel: '#githubactionsexample'
              if: always()           
            - uses: actions/checkout@v1
            - uses: actions/setup-java@v1
              with:
                java-version: '12.x'
            - uses: actions/subosito/flutter-action@v1
              with:
                flutter-version: '1.17.0'
            - run: flutter pub get
            - run: flutter build apk -t lib/main.dart --split-per-abi
            - name: Relase apk
              uses: ncipollo/release-action@v1
              with:
                artifacts: "build/app/outputs/apk/release/*.apk"
                token: ${{secrets.TOKEN}}
            
            #- name: Analisis de codigo estatico
              #id: Analisis_Codigo_Estatico
              #uses: sonarsource/sonarcloud-github-action@master
              #env:
                #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            #- name: Hacer build
              #run: npm run build

            #- name: Creaci√≥n de artefacto
              #id: Generar_Artefacto
              #uses: actions/upload-artifact@v2
              #with:
                #name: GithubActions
                #path: dist

            #- name: Dockerizacion
              #id: Dockerizacion
              #uses: docker/build-push-action@v1
              #with:
                #username: ${{ secrets.USER_DOCKER }}
                #password: ${{ secrets.PASSWORD_DOCKER }}
                #repository: ${{ secrets.REPOSITORY_DOCKER }}
                #tags: latest

            - uses: act10ns/slack@v1
              with:
                status: ${{ job.status }}
                steps: ${{ toJson(steps) }}
                channel: '#githubactionsexample'
              if: always()
